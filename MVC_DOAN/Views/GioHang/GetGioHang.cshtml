
@model GioHangVM
@{
    ViewData["Title"] = "Giỏ hàng";
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var emaill = $("#emailnguoidung").text() ;
    var DonhangID;
    var selectedValue;
        $(".label-address input[type='radio']").click(function () {
            // Lấy giá trị của input được chọn
            selectedValue = $(this).val();
        });
    var currentTime = new Date();
    var selectedPaymentMethod;
    var radioButtons = document.querySelectorAll('input[name="options"]');
    radioButtons.forEach(function (radioButton) {
        radioButton.addEventListener('click', function () {
            // Lấy giá trị text tương ứng với nút radio được chọn
            selectedPaymentMethod = this.id;
        });
    });

      
        function renderCity(data) {
            for (const x of data) {
                citis.options[citis.options.length] = new Option(x.Name, x.Id);
            }
            citis.onchange = function () {
                district.length = 1;
                ward.length = 1;
                if (this.value != "") {
                    const result = data.filter(n => n.Id === this.value);

                    for (const k of result[0].Districts) {
                        district.options[district.options.length] = new Option(k.Name, k.Id);
                    }
                }
            };
            district.onchange = function () {
                ward.length = 1;
                const dataCity = data.filter((n) => n.Id === citis.value);
                if (this.value != "") {
                    const dataWards = dataCity[0].Districts.filter(n => n.Id === this.value)[0].Wards;

                    for (const w of dataWards) {
                        wards.options[wards.options.length] = new Option(w.Name, w.Id);
                    }
                }
            };
        }

        function renderCityEdit(data) {
            for (const x of data) {
                citisEdit.options[citisEdit.options.length] = new Option(x.Name, x.Id);
            }
            citisEdit.onchange = function () {
                districtEdit.length = 1;
                ward.length = 1;
                if (this.value != "") {
                    const result = data.filter(n => n.Id === this.value);

                    for (const k of result[0].Districts) {
                        districtEdit.options[districtEdit.options.length] = new Option(k.Name, k.Id);
                    }
                }
            };
            districtEdit.onchange = function () {
                ward.length = 1;
                const dataCity = data.filter((n) => n.Id === citisEdit.value);
                if (this.value != "") {
                    const dataWards = dataCity[0].Districts.filter(n => n.Id === this.value)[0].Wards;

                    for (const w of dataWards) {
                        wardsEdit.options[wardsEdit.options.length] = new Option(w.Name, w.Id);
                    }
                }
            };
        }

        var citis = document.getElementById("city");
        var districts = document.getElementById("district");
        var wards = document.getElementById("ward");
        var Parameter = {
            url: "https://raw.githubusercontent.com/kenzouno1/DiaGioiHanhChinhVN/master/data.json",
            method: "GET",
            responseType: "application/json",
        };
        var promise = axios(Parameter);
        promise.then(function (result) {
            renderCity(result.data);
        });

        var citisEdit = document.getElementById("cityEdit");
        var districtsEdit = document.getElementById("districtEdit");
        var wardsEdit = document.getElementById("wardEdit");
        var Parameter = {
            url: "https://raw.githubusercontent.com/kenzouno1/DiaGioiHanhChinhVN/master/data.json",
            method: "GET",
            responseType: "application/json",
        };
        var promise = axios(Parameter);
        promise.then(function (result) {
            renderCityEdit(result.data);
        });


        var btnCancelEditAddress = document.querySelectorAll(".cancel-edit-address");
        btnCancelEditAddress.forEach(function (item) {
            item.addEventListener('click', function () {
                var parentDiv = item.closest('.card-address-details').querySelector('#edit-address-container');
                parentDiv.style.display = 'none';
            });
        });

        const dynamicInput = document.getElementById('edit-address-container');
        var editAddress = document.querySelectorAll(".edit-address");
        editAddress.forEach(function (item) {
            item.addEventListener('click', function () {
                var editContainer = item.closest('.card-address-details').querySelector('.address-container');

                const idAddress = editContainer.querySelector('.id-address').innerText;
                const consigneeName = editContainer.querySelector('.consignee-name').innerText;
                const phoneNumber = editContainer.querySelector('.phone-numer').innerText;
                const addressDetails = editContainer.querySelector('.address-details').innerText;
                let arrAddress = addressDetails.split(", ");

                var idAddressInput = document.getElementById('id-address-input');
                var nameInput = document.getElementById('name-input');
                var phoneInput = document.getElementById('phone-input');
                var addressInput = document.getElementById('address-input');
                var cityInput = document.getElementById('cityEdit');
                var districtInput = document.getElementById('districtEdit');
                var wardInput = document.getElementById('wardEdit');

                idAddressInput.value = idAddress;
                nameInput.value = consigneeName;
                phoneInput.value = phoneNumber;
                addressInput.value = arrAddress[0];

                for (var i = 0; i < cityInput.options.length; i++) {
                    if (cityInput.options[i].text === arrAddress[3]) {
                        cityInput.selectedIndex = i; // Chọn option có text khớp
                        // Tạo và kích hoạt sự kiện onchange cho select box
                        var event = new Event('change');
                        cityInput.dispatchEvent(event);
                        break;
                    }
                }
                for (var i = 0; i < districtInput.options.length; i++) {
                    if (districtInput.options[i].text === arrAddress[2]) {
                        districtInput.selectedIndex = i; // Chọn option có text khớp
                        // Tạo và kích hoạt sự kiện onchange cho select box
                        var event = new Event('change');
                        districtInput.dispatchEvent(event);
                        break;
                    }
                }
                for (var i = 0; i < wardInput.options.length; i++) {
                    if (wardInput.options[i].text === arrAddress[1]) {
                        wardInput.selectedIndex = i; // Chọn option có text khớp
                        // Tạo và kích hoạt sự kiện onchange cho select box
                        var event = new Event('change');
                        wardInput.dispatchEvent(event);
                        break;
                    }
                }

                editContainer.appendChild(dynamicInput);
                dynamicInput.style.display = 'block';
            });
        });

        // Lấy tất cả các hàng input group
        const inputGroups = document.querySelectorAll(".quantity-price");

        // Lặp qua từng hàng input group để thêm sự kiện tương ứng
        inputGroups.forEach(function (group) {
            const decrementButton = group.querySelector(".decrement");
            const incrementButton = group.querySelector(".increment");
            const quantityInput = group.querySelector(".quantityInput");
            const priceDiv = group.querySelector(".priceDiv");
            const originalPrice = parseInt(priceDiv.querySelector("b").innerText);

            function updatePrice(value) {
                const newPrice = originalPrice * value;
                priceDiv.querySelector("b").innerText = newPrice;
            }
            decrementButton.addEventListener("click", function () {
                let currentValue = parseInt(quantityInput.value) || 1;
                if (currentValue > 1) {
                    currentValue--;
                    quantityInput.value = currentValue;
                    updatePrice(currentValue);
                }
            });

            incrementButton.addEventListener("click", function () {
                let currentValue = parseInt(quantityInput.value) || 1;
                currentValue++;
                quantityInput.value = currentValue;
                updatePrice(currentValue);
            });

            quantityInput.addEventListener("input", function () {
                let currentValue = parseInt(quantityInput.value) || 1;
                updatePrice(currentValue);
            });
        });

        const checkboxes = document.querySelectorAll('.checked-row input[type="checkbox"]');
        const totalElement = document.getElementById('totalAmount');
        let totalPrice = 0;

        checkboxes.forEach(function (checkbox) {
            checkbox.addEventListener('change', function () {
                const isChecked = this.checked;
                const priceDiv = this.closest('.checked-row').nextElementSibling.querySelector('.priceDiv');
                const price = parseInt(priceDiv.querySelector('b').innerText);

                if (isChecked) {
                    totalPrice += price;
                } else {
                    totalPrice -= price;
                }

                // Cập nhật tổng giá trị
                totalElement.textContent = totalPrice;
            });
        });



        const showModalButton = document.getElementById('showModalButton');
        const modal = document.getElementById('myModal');
        const modalConfirm = document.getElementById('myModalConfirm');
        const closeBtn = document.querySelectorAll('.close');
        const cancelConfirmBtn = document.getElementById('cancel-confirm');


        $("#btnThanhToan").click(function (event) {
            var MOUNTT = $("#totalAmount").text();
            var selectedIds = [];
            var checkboxes = document.querySelectorAll('input[type="checkbox"]');
            checkboxes.forEach(function (checkbox) {
                if (checkbox.checked) {
                    // Nếu checkbox được chọn, thêm Id tương ứng vào mảng selectedIds
                    selectedIds.push(checkbox.value);
                }
            });
            // Lấy dữ liệu từ form
            var phuongThucThanhToan = selectedPaymentMethod;
            var trangThaiDonHang = "Chờ duyệt";
            var diaChiId = selectedValue;


            var trangThaiThanhToan;
            if (selectedPaymentMethod == "COD")
                trangThaiThanhToan = "Chưa thanh toán";
            else trangThaiThanhToan = "Đã thanh toán";

            // Định nghĩa URL và dữ liệu
            if (diaChiId != null) {
                if (phuongThucThanhToan != null) {
                    if (phuongThucThanhToan == "COD") {
                        modalConfirm.style.display = 'block';
                        document.getElementById('confirm').addEventListener('click', function () {
                            var url = "/DonHang/Create";
                            var data = {
                                Phuongthucthanhtoan: phuongThucThanhToan,
                                Trangthaidonhang: trangThaiDonHang,
                                DiachiId: diaChiId,
                                Trangthaithanhtoan: trangThaiThanhToan,
                                Ngaytao: currentTime
                            };

                            // Gửi yêu cầu POST
                            $.ajax({
                                url: url,
                                type: "POST",
                                data: data,
                                success: function (response) {
                                    // Xử lý kết quả trả về từ server
                                    if (response > 0) {
                                        DonhangID = response;
                                        $.ajax({
                                            url: '/ChiTietDon/Create',
                                            method: 'POST',
                                            data: JSON.stringify({ donhangid: DonhangID, ctghid: selectedIds }),
                                            contentType: 'application/json',
                                            success: function (res) {
                                                if (res) {
                                                    location.reload();
                                                } else {
                                                    alert('Create failed');
                                                }
                                            },
                                            error: function (error) {
                                                alert('Error:', error);
                                            }
                                        });
                                    } else {
                                        alert("Đã xảy ra lỗi khi tạo đơn hàng.");
                                    }
                                },
                                error: function (xhr, textStatus, error) {
                                    // Xử lý lỗi
                                    alert("Lỗi khi gửi yêu cầu: " + error);
                                }

                            });
                        });
                        
                    }
                    else if (phuongThucThanhToan == "VNPay") {

                        var url = "/DonHang/Create";
                        var data = {
                            Phuongthucthanhtoan: phuongThucThanhToan,
                            Trangthaidonhang: trangThaiDonHang,
                            DiachiId: diaChiId,
                            Trangthaithanhtoan: trangThaiThanhToan,
                            Ngaytao: currentTime
                        };

                        // Gửi yêu cầu POST
                        $.ajax({
                            url: url,
                            type: "POST",
                            data: data,
                            success: function (response) {
                                // Xử lý kết quả trả về từ server
                                if (response > 0) {
                                    DonhangID = response;
                                    $.ajax({
                                        url: '/ChiTietDon/Create',
                                        method: 'POST',
                                        data: JSON.stringify({ donhangid: DonhangID, ctghid: selectedIds }),
                                        contentType: 'application/json',
                                        success: function (res) {
                                            if (res) {
                                                var tt = {
                                                    mail: emaill,
                                                    dongia: MOUNTT
                                                };
                                                // Gửi yêu cầu Ajax đến phương thức Index trong Controller
                                                $.ajax({
                                                    url: "/VNPAY/Index",
                                                    type: "GET",
                                                    data: JSON.stringify(tt),
                                                    contentType: "application/json",
                                                    success: function (response) {
                                                        // Chuyển hướng đến trang View "Index.cshtml" với dữ liệu truyền qua query string
                                                        var queryString = "mail=" + encodeURIComponent(tt.mail) + "&dongia=" + encodeURIComponent(tt.dongia);
                                                        window.location.href = "/VNPAY/Index?" + queryString;
                                                    },
                                                    error: function (xhr, status, error) {
                                                        alert("Lỗi");
                                                    }
                                                });
                                            } else {
                                                alert('Create failed');
                                            }
                                        },
                                        error: function (error) {
                                            alert('Error:', error);
                                        }
                                    });
                                } else {
                                    alert("Đã xảy ra lỗi khi tạo đơn hàng.");
                                }
                            },
                            error: function (xhr, textStatus, error) {
                                // Xử lý lỗi
                                alert("Lỗi khi gửi yêu cầu: " + error);
                            }

                        });


                    }
                }
            }

        });

        showModalButton.addEventListener('click', function () {
            modal.style.display = 'block';
        });
        closeBtn.forEach(function (item) {
            item.addEventListener('click', function () {
                modal.style.display = 'none';
                modalConfirm.style.display = 'none';
            });
        });
        cancelConfirmBtn.addEventListener('click', function () {
            modalConfirm.style.display = 'none';
        });

        window.addEventListener('click', function (event) {
            if (event.target === modal) {
                modal.style.display = 'none';
                modalConfirm.style.display = 'none';
            }
        });

        var consigneenameInputCheckout = document.getElementById('input-consigneename');
        var phoneInputCheckout = document.getElementById('input-phonenumber');
        var addressInputCheckout = document.getElementById('input-address');
        // Lấy tất cả các input radio trong tài liệu
        var radios = document.querySelectorAll(".address");

        // Lặp qua từng radio và thêm sự kiện 'click'
        radios.forEach(function (radio) {
            radio.addEventListener('click', function () {
                if (this.checked) {
                    // Ẩn modal khi người dùng chọn radio button
                    var modal = document.getElementById('myModal');
                    modal.style.display = 'none';

                    var consigneeName = this.closest('.label-address').querySelector('.consignee-name').innerText;
                    var phoneNumber = this.closest('.label-address').querySelector('.phone-numer').innerText;
                    var addressDetails = this.closest('.label-address').querySelector('.address-details').innerText;

                    consigneenameInputCheckout.value = consigneeName;
                    phoneInputCheckout.value = phoneNumber;
                    addressInputCheckout.value = addressDetails;
                }
            });
        });

        // Lấy thẻ button
        var btnAddAddress = document.getElementById('btn-add-address');
        btnAddAddress.addEventListener('click', function () {
            document.getElementById('add-address-container').style.display = '';
            btnAddAddress.style.display = 'none';
        });

        var btnCancelAddress = document.getElementById('cancel-add-address');
        btnCancelAddress.addEventListener('click', function () {
            document.getElementById('add-address-container').style.display = 'none';
            btnAddAddress.style.display = 'block';
        });

        var btnSaveAddress = document.getElementById('save-add-address');
        // btnSaveAddress.addEventListener('click', function () {
        //     var nameInput = document.getElementById('name-input');
        //     var phoneInput = document.getElementById('phone-input');
        //     var addressInput = document.getElementById('address-input');
        //     var cityOption = document.getElementById('city');
        //     var districtOption = document.getElementById('district');
        //     var wardOption = document.getElementById('ward');

        //     alert(nameInput.value, phoneInput, addressInput, cityOption);

        //     alert("Nhan ");
        //     //ínert vào csdl
        //                 $.ajax({
        //                     url: '/DiaChi/Create',
        //                     method: 'POST',
        //                     data: JSON.stringify(
        //                     {   Hotennguoinhan: nameInput.value,
        //                         Sdt: phoneInput.value,
        //                 Tinh: cityOption.options[cityOption.selectedIndex].textContent,
        //                 Huyen: districtOption.options[districtOption.selectedIndex].textContent,
        //                 Xa: wardOption.options[wardOption.selectedIndex].textContent,
        //                         Diachichitiet: addressInput.value}
        //                     ),
        //                     contentType: 'application/json',
        //                     success: function (res) {
        //                         if (res) {
        //                             alert("Them thanh cong")
        //                         } else {
        //                             alert('Create failed');
        //                         }
        //                     },
        //                     error: function (error) {
        //                         alert('Error:', error);
        //                     }
        //                 });
        //     //if(true) thì thực hiện đoạn dưới

        //     document.getElementById('add-address-container').style.display = 'none';
        //     btnAddAddress.style.display = 'block';

        //     // Tạo các phần tử HTML
        //     var outerDiv = document.createElement('div');
        //     outerDiv.classList.add('card-address-details', 'col-lg-12', 'row', 'mb-3');
        //     outerDiv.style.marginLeft = '0';

        //     var cardDiv = document.createElement('div');
        //     cardDiv.classList.add('card', 'p-0', 'col-lg-11');

        //     var labelDiv = document.createElement('label');
        //     labelDiv.classList.add('label-address', 'btn', 'btn-secondary', 'form-control', 'form-control-lg', 'd-flex', 'align-items-center', 'p-0');

        //     var inputRadio = document.createElement('input');
        //     inputRadio.setAttribute('type', 'radio');
        //     inputRadio.setAttribute('name', 'options');
        //     inputRadio.classList.add('address');
        //     inputRadio.setAttribute('autocomplete', 'off');
        //     inputRadio.style.margin = '10px';
        //     inputRadio.setAttribute('size', '1');
        //     inputRadio.setAttribute('minlength', '3');
        //     inputRadio.setAttribute('maxlength', '3');
        //     inputRadio.checked = false;
        //     inputRadio.addEventListener('click', function () {
        //         if (this.checked) {
        //             var modal = document.getElementById('myModal');
        //             modal.style.display = 'none';

        //             var consigneeName = this.closest('.label-address').querySelector('.consignee-name').innerText;
        //             var phoneNumber = this.closest('.label-address').querySelector('.phone-numer').innerText;
        //             var addressDetails = this.closest('.label-address').querySelector('.address-details').innerText;

        //             consigneenameInputCheckout.value = consigneeName;
        //             phoneInputCheckout.value = phoneNumber;
        //             addressInputCheckout.value = addressDetails;
        //         }
        //     });

        //     var innerDiv = document.createElement('div');
        //     innerDiv.style.margin = '10px';
        //     innerDiv.style.display = 'block';
        //     innerDiv.style.textAlign = 'left';

        //     var div1 = document.createElement('div');
        //     var boldText1 = document.createElement('b');
        //     boldText1.textContent = 'Tên người nhận: ';
        //     var span1 = document.createElement('span');
        //     span1.classList.add('consignee-name');
        //     span1.textContent = nameInput.value;
        //     div1.appendChild(boldText1);
        //     div1.appendChild(span1);

        //     var div2 = document.createElement('div');
        //     var boldText2 = document.createElement('b');
        //     boldText2.textContent = 'Số điện thoại: ';
        //     var span2 = document.createElement('span');
        //     span2.classList.add('phone-numer');
        //     span2.textContent = phoneInput.value;
        //     div2.appendChild(boldText2);
        //     div2.appendChild(span2);

        //     var div3 = document.createElement('div');
        //     var boldText3 = document.createElement('b');
        //     boldText3.textContent = 'Địa chỉ: ';
        //     var span3 = document.createElement('span');
        //     span3.classList.add('address-details');

        //     var addressString = addressInput.value + ", " + wardOption.options[wardOption.selectedIndex].textContent + ", " + districtOption.options[districtOption.selectedIndex].textContent + ", " + cityOption.options[cityOption.selectedIndex].textContent

        //     span3.textContent = addressString;
        //     div3.appendChild(boldText3);
        //     div3.appendChild(span3);

        //     var trashDiv = document.createElement('div');
        //     trashDiv.classList.add('col-lg-1', 'vertical-center');
        //     var trashLink = document.createElement('a');
        //     trashLink.setAttribute('href', '#!');
        //     trashLink.style.color = '#cecece';
        //     var trashIcon = document.createElement('i');
        //     trashIcon.classList.add('fas', 'fa-trash-alt');
        //     trashLink.appendChild(trashIcon);
        //     trashDiv.appendChild(trashLink);

        //     // Chèn các phần tử vào nhau theo cấu trúc
        //     outerDiv.appendChild(cardDiv);
        //     cardDiv.appendChild(labelDiv);
        //     labelDiv.appendChild(inputRadio);
        //     labelDiv.appendChild(innerDiv);
        //     innerDiv.appendChild(div1);
        //     innerDiv.appendChild(div2);
        //     innerDiv.appendChild(div3);
        //     outerDiv.appendChild(trashDiv);

        //     var divsWithClassA = document.querySelectorAll('#container-address .card-address-details');
        //     var lastDivWithClassA = divsWithClassA[divsWithClassA.length - 1];
        //     lastDivWithClassA.after(outerDiv);
        // });

    var deleteAddress = document.querySelectorAll(".delete-address");
    deleteAddress.forEach(function (item) {
        item.addEventListener('click', function () {
            var parentDiv = item.closest('.card-address-details');
            parentDiv.style.display = 'none';
        });
    });

    });

</script>
<style>
    :root {
        --secondary-color: #ffffff;
        --secondary-color-active: #f0f0f0;
    }

    /* Áp dụng màu chủ đạo mới cho các phần tử Bootstrap */
    .btn-secondary {
        background-color: var(--secondary-color);
        border-color: var(--secondary-color);
        color: #000000;
    }

        .btn-secondary:hover,
        .btn-secondary:focus,
        .btn-secondary:active,
        .btn-secondary.active,
        .show > .btn-secondary.dropdown-toggle {
            background-color: var(--secondary-color-active);
            border-color: var(--secondary-color-active);
            color: #000000;
        }

    .icon-with-text {
        cursor: pointer;
        position: relative;
        display: inline-block; /* Để div chỉ chứa đúng kích thước của nội dung bên trong */
        font-size: 16px; /* Kích thước chung của văn bản và icon */
        margin-bottom: 20px; /* Khoảng cách giữa các div */
    }

        .icon-with-text i {
            position: absolute;
            right: 20px;
            top: 50%;
            transform: translateY(-50%);
            color: #aaa;
        }

        .icon-with-text .text {
            padding-right: 20px; /* Khoảng trống bên phải của div chứa văn bản */
        }

    .button-with-icon {
        position: relative;
        display: block;
        font-size: 16px;
        margin-bottom: 20px;
        padding: 0 !important;
    }

        .button-with-icon button {
            text-align: left;
        }

        .button-with-icon i {
            position: absolute;
            right: 20px;
            top: 50%;
            transform: translateY(-50%);
            color: #aaa;
        }
    /* CSS để ẩn modal ban đầu và cố định kích thước */
    .modal {
        display: none; /* Ẩn modal */
        position: fixed; /* Cố định vị trí trên cùng của trình duyệt */
        z-index: 1; /* Hiển thị modal trên các phần tử khác */
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto; /* Kích hoạt thanh cuộn trong trường hợp nội dung dài */
        background-color: rgba(0, 0, 0, 0.5); /* Màu nền với độ mờ */
    }

    .modal-content {
        position: absolute; /* Đặt vị trí tuyệt đối để tránh các hiệu ứng kích thước mở rộng */
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #fff; /* Màu nền của phần modal */
        padding: 20px;
        border: 1px solid #888;
        max-width: 80%; /* Kích thước tối đa của modal */
        max-height: 80%; /* Chiều cao tối đa của modal */
        overflow: auto; /* Kích hoạt thanh cuộn trong trường hợp nội dung dài */
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

    .vertical-center {
        display: flex;
        align-items: center; /* Căn giữa theo chiều dọc */
        justify-content: center; /* Căn giữa theo chiều ngang */
    }

</style>
<div style="height: 100px; background-color: #051922;"></div>
<section style="background-color: #eee;">
    <div style="display:none" id="emailnguoidung">@Model.diachis.First().Taikhoan.Email</div>
    <div class="modal" id="myModal">
        <div id="container-address" class="modal-content">
            <span class="close" style="text-align: right;">&times;</span>
            <h5>SỔ ĐỊA CHỈ</h5>
            @foreach (var item in Model.diachis)
            {
                @if(item.Tinhtrang =="1")
                {
                    <div class="card-address-details col-lg-12 row mb-3" style="margin-left: 0 !important;">
						<div class="address-container card p-0 col-lg-11">
                            <div class="id-address" style=" display: none">@item.Id</div>
                            <label class="label-address btn btn-secondary form-control form-control-lg d-flex align-items-center p-0">
								<input type="radio" name="diachi" class="address" autocomplete="off" style="margin:10px" value="@item.Id"
									   size="1" minlength="3" maxlength="3"
									   checked>
								<div style="margin:10px; display: block; text-align: left;">
									<div><b>Tên người nhận: </b><span class="consignee-name">@item.Hotennguoinhan</span></div>
									<div><b>Số điện thoại: </b><span class="phone-numer">@item.Sdt </span></div>
									<div><b>Địa chỉ: </b><span class="address-details">@item.Diachichitiet, @item.Xa, @item.Huyen, @item.Tinh</span></div>
								</div>
							</label>

						</div>
						<div class="col-lg-1 vertical-center">
							<a href="#!" style="color: #cecece; margin-right:10px"><i class="edit-address fas fa-edit text-warning"></i></a>

							@using (Html.BeginForm("DeleteGioHang", "DiaChi", FormMethod.Post))
							{
								<input type="hidden" name="Id" value="@item.Id" />
								<a style="color: #cecece;" onclick="event.target.closest('form').submit()"><i class="delete-address fas fa-trash-alt text-danger"></i></a>
							}
						</div>
                    
				    </div>
                }
			}

			<div id="edit-address-container" style="padding:15px; margin-top:10px; display:none">
                @using (Html.BeginForm("Edit", "DiaChi", FormMethod.Post))
                {
                <input type="hidden" id="id-address-input" name="Id" value="" readonly>
                   
				<div class="row">
					<div class="col-md-4">
						<label>Tên người nhận:</label><br />
                            <input type="text" id="name-input" name="Hotennguoinhan" style="width:100%;height:30px;" required>
					</div>
					<div class="col-md-4">
						<label>Số điện thoại:</label><br />
                            <input type="text" id="phone-input" name="Sdt" style="width:100%;height:30px;" required>
					</div>
					<div class="col-md-4">
						<label>Địa chỉ:</label><br />
                            <input type="text" id="address-input" name="Diachichitiet" style="width:100%;height:30px;" required>
					</div>
				</div>
				<div class="row">
					<div class="col-md-4">
						<label>Tỉnh/ Thành phố:</label><br />
						<select class="form-select form-select-sm mb-3" id="cityEdit" style="width:100%;height:30px;">
							<option value="" selected>Chọn tỉnh thành</option>
						</select>
                            <input type="hidden" id="city-text-edit" name="Tinh" readonly>
					</div>
					<div class="col-md-4">
						<label>Quận/ Huyện:</label><br />
						<select class="form-select form-select-sm mb-3" id="districtEdit" style="width:100%;height:30px;">
							<option value="" selected>Chọn quận huyện</option>
						</select>
                            <input type="hidden" id="district-text-edit" name="Huyen" readonly>
					</div>
					<div class="col-md-4">
						<label>Phường xã:</label><br />
						<select class="form-select form-select-sm" id="wardEdit" style="width:100%;height:30px;">
							<option value="" selected>Chọn phường xã</option>
						</select>
                            <input type="hidden" id="ward-text-edit" name="Xa" readonly>
					</div>
				</div>
				<div style="display:flex;margin:20px;justify-content:center;">
					<button type="submit" class="save-edit-address btn btn-dark" style="margin-right:20px;">Lưu</button>
					<button class="cancel-edit-address btn btn-dark" style="margin-right:20px;">Hủy</button>
				</div>
                }
			</div>


            <div class="card" id="add-address-container" style="padding:15px; display:none;">
                @using (Html.BeginForm("Create", "DiaChi", FormMethod.Post))
                {
                <label>Tên người nhận:</label>
                <input type="text" id="name-input" name="Hotennguoinhan" required>
                <label>Số điện thoại:</label>
                <input type="text" id="phone-input" name="Sdt" required>
                <label>Địa chỉ:</label>
                <input type="text" id="address-input" name="Diachichitiet" required>
                <div class="row">
                    <div class="col-md-4">
                            <label for ="Tinh">Tỉnh/ Thành phố:</label><br />
                        <select  class="form-select form-select-sm mb-3" id="city" style="width:100%;height:30px;" required>
                            <option value="" selected>Chọn tỉnh thành</option>
                        </select>
                            <input type="hidden" id="city-text-input" name="Tinh" readonly>
                    </div>
                    <div class="col-md-4">
                            <label >Quận/ Huyện:</label><br />
                        <select  class="form-select form-select-sm mb-3" id="district" style="width:100%;height:30px;">
                            <option value="" selected>Chọn quận huyện</option>
                        </select>
                            <input type="hidden" id="district-text-input" name="Huyen" readonly>
                    </div>
                    <div class="col-md-4">
                            <label >Phường xã:</label><br />
                            <select class="form-select form-select-sm" id="ward" style="width:100%;height:30px;">
                            <option value="" selected>Chọn phường xã</option>
                        </select>
                            <input type="hidden" id="ward-text-input" name="Xa" readonly>
                    </div>
                </div>
                <div style="display:flex;margin:20px;justify-content:center;">
                        <button type="submit" id="save-add-address" class="btn btn-dark" style="margin-right:20px;" >Thêm</button>
                    <button id="cancel-add-address" class="btn btn-dark" style="margin-right:20px;">Hủy</button>
                </div>
                }


            </div>
            <button id="btn-add-address" class="card row mb-3" type="button" style="margin: 0 !important; display:block;">
                <div>
                    <i class="fas fa-plus"></i><span style="margin-left:20px;">Thêm địa chỉ mới</span>
                </div>
            </button>

        </div>
    </div>

    <div class="modal" id="myModalConfirm">
        <div id="container-confirm" class="modal-content" style="width:50%">
            <span class="close" style="text-align: right;">&times;</span>
            <h5 style="align-self:center">XÁC NHẬN ĐẶT HÀNG</h5>


            <div style="display:flex;margin:20px;justify-content:center;">
                <button type="submit" id="confirm" class="btn btn-dark" style="margin-right:20px;">Thanh toán</button>
                <button id="cancel-confirm" class="btn btn-dark" style="margin-right:20px;">Hủy</button>
            </div>

        </div>
    </div>

    <div class="container py-5 h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col">
                <div class="card">
                    <div class="card-body p-4">

                        <div class="row">

                            <div class="col-lg-7" style=" height: 600px; overflow: auto;">
                                <h5 class="mb-3">
                                    <a asp-action="Index" asp-controller="SanPham" class="text-body">
                                        <i class="fas fa-long-arrow-alt-left me-2"></i>Tiếp tục mua sắm
                                    </a>
                                </h5>
                                <hr>
                                @foreach(var item in Model.ctghvms)
                                {
                                <div class="card mb-3">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between">
                                            <div class="checked-row d-flex flex-row align-items-center" data-key="">
                                                <div class="mx-3">
                                                    <input type="checkbox" id="myCheckbox" value="@item.Id">
                                                </div>
                                                <div class="mx-3">
                                                    <img src="@item.Img"
                                                         class="img-fluid rounded-3" alt="Shopping item" style="width: 65px;">
                                                </div>
                                                <div class="ms-3" style="width: 150px;">
                                                    <h5>@item.Tensp</h5>
                                                </div>
                                            </div>
                                            <div class="quantity-price d-flex flex-row align-items-center">
                                                <div class="input-group" style="z-index:0;">
                                                        @using (Html.BeginForm("Edit", "GioHang", FormMethod.Post))
                                                        {
                                                    <button class="btn btn-white border border-secondary px-3 decrement" type="submit" data-mdb-ripple-color="dark">
                                                        <i class="fas fa-minus"></i>
                                                    </button>
                                                            <input type="hidden" name="Id" value="@item.Id" />
                                                            <input type="hidden" name="SanphamId" value="@item.SanphamId" />
                                                            <input type="hidden" name="TaikhoanId" value="@item.TaikhoanId" />
                                                            <input type="hidden" name="Soluong" value="@(item.Soluong-1)" />
                                                        }
                                                    <div class="quantityInput text-center border border-secondary" value="1" style="width: 50px;" >@item.Soluong</div>
                                                        @using (Html.BeginForm("Edit", "GioHang", FormMethod.Post))
                                                        {
                                                    <button class="btn btn-white border border-secondary px-3 increment" type="submit" data-mdb-ripple-color="dark">
                                                        <i class="fas fa-plus"></i>
                                                    </button>
                                                            <input type="hidden" name="Id" value="@item.Id" />
                                                            <input type="hidden" name="SanphamId" value="@item.SanphamId" />
                                                            <input type="hidden" name="TaikhoanId" value="@item.TaikhoanId" />
                                                            <input type="hidden" name="Soluong" value="@(item.Soluong+1)" />
                                                        }
                                                </div>
                                                <div class="priceDiv" style="width: 200px;">
                                                        <p class="mb-0"><b>@(item.Dongia * item.Soluong)</b><span> VNĐ</span></p>
                                                </div>
                                                    @using (Html.BeginForm("DeleteGioHang", "GioHang", FormMethod.Post))
                                                    {
                                                        <input type="hidden" name="Id" value="@item.Id" />
                                                        <a style="color: #cecece;" onclick="event.target.closest('form').submit()"><i class="fas fa-trash-alt"></i></a>
                                                    }
                                                    
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                }
                            </div>
                            
                            <div class="col-lg-5">
                                <div class="card text-white rounded-3" style="background-color: rgba(5, 25, 34, 0.6);">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between align-items-center mb-4">
                                            <h5 class="mb-0">Giỏ hàng</h5>
                                        </div>

                                        <div class="button-with-icon form-control">
                                            <button class="form-control form-control-lg" id="showModalButton">
                                                Chọn địa chỉ giao hàng <i class="fas fa-arrow-right"></i>
                                            </button>
                                        </div>

                                        <form class="mt-4">
                                            <div class="form-group mb-4">
                                                <label for="input-consigneename">Tên người nhận hàng:</label>
                                                <input type="text" class="form-control form-control-lg" id="input-consigneename" disabled>
                                            </div>
                                            <div class="form-group mb-4">
                                                <label for="input-phonenumber">Số điện thoại:</label>
                                                <input type="text" class="form-control form-control-lg" id="input-phonenumber" disabled>
                                            </div>
                                            <div class="form-group mb-4">
                                                <label for="input-address">Địa chỉ giao hàng:</label>
                                                <input type="text" class="form-control form-control-lg" id="input-address" disabled>
                                            </div>
                                        </form>
                                        
                                        <label>Chọn phương thức thanh toán:</label>
                                        <div data-toggle="buttons" style="border: 2px solid #ccc; border-radius: 10px; background-color: #f0f0f0;">
                                            <label class="btn btn-secondary form-control form-control-lg d-flex align-items-center justify-content-between">
                                                <input type="radio" name="options" id="COD" autocomplete="off"
                                                       size="1" minlength="3" maxlength="3" style="margin-right: 10px;">
                                                <span class="flex-grow-1">Thanh toán khi nhận hàng</span>
                                            </label>

                                            <label class="btn btn-secondary form-control form-control-lg d-flex align-items-center justify-content-between">
                                                <input type="radio" name="options" id="VNPay" autocomplete="off"
                                                       size="1" minlength="3" maxlength="3" style="margin-right: 10px;">
                                                <span class="flex-grow-1">Thanh toán VNPay</span>
                                            </label>

                                        </div>

                                        <hr class="my-4">
                                            
                                        <div class="d-flex justify-content-between">
                                            <p class="mb-2"><strong>Tổng tiền</strong></p>
                                            <p class="mb-2"><strong id="totalAmount">0</strong><span> VNĐ</span></p>
                                        </div>
                                        
                                         <button type="button" class="btn btn-light info btn-block btn-lg w-100" id="btnThanhToan">
                                            <div class="d-flex justify-content-between align-items-center text-center w-100">
                                                <span class="mx-auto">Thanh toán <i class="fas fa-long-arrow-alt-right ms-2"></i></span>
                                            </div>
                                        </button>
                                    </div>
                                </div>

                            </div>

                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<script>

    document.getElementById("city").addEventListener("change", function () {
        var selectElement = document.getElementById("city");
        var selectedOption = selectElement.options[selectElement.selectedIndex];
        var selectedText = selectedOption.text;
        document.getElementById("city-text-input").value = selectedText;
    });
    document.getElementById("district").addEventListener("change", function () {
        var selectElement = document.getElementById("district");
        var selectedOption = selectElement.options[selectElement.selectedIndex];
        var selectedText = selectedOption.text;
        document.getElementById("district-text-input").value = selectedText;
    });
    document.getElementById("ward").addEventListener("change", function () {
        var selectElement = document.getElementById("ward");
        var selectedOption = selectElement.options[selectElement.selectedIndex];
        var selectedText = selectedOption.text;
        document.getElementById("ward-text-input").value = selectedText;
    });

    document.getElementById("cityEdit").addEventListener("change", function () {
        var selectElement = document.getElementById("cityEdit");
        var selectedOption = selectElement.options[selectElement.selectedIndex];
        var selectedText = selectedOption.text;
        document.getElementById("city-text-edit").value = selectedText;
    });
    document.getElementById("districtEdit").addEventListener("change", function () {
        var selectElement = document.getElementById("districtEdit");
        var selectedOption = selectElement.options[selectElement.selectedIndex];
        var selectedText = selectedOption.text;
        document.getElementById("district-text-edit").value = selectedText;
    });
    document.getElementById("wardEdit").addEventListener("change", function () {
        var selectElement = document.getElementById("wardEdit");
        var selectedOption = selectElement.options[selectElement.selectedIndex];
        var selectedText = selectedOption.text;
        document.getElementById("ward-text-edit").value = selectedText;
    });
</script>